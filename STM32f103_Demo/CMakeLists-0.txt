#此文件从模板自动生成! 请勿更改!
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_VERSION 1)
cmake_minimum_required(VERSION 3.21)

# specify cross compilers and tools
set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER  arm-none-eabi-gcc)
set(CMAKE_AR arm-none-eabi-ar)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

# project settings
project(STM32f103_Demo C CXX ASM)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

#Uncomment for hardware floating point
#add_compile_definitions(ARM_MATH_CM4;ARM_MATH_MATRIX_CHECK;ARM_MATH_ROUNDING)
#add_compile_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)
#add_link_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)

#Uncomment for software floating point
#add_compile_options(-mfloat-abi=soft)

add_compile_options(-mcpu=cortex-m3 -mthumb -mthumb-interwork)
add_compile_options(-ffunction-sections -fdata-sections -fno-common -fmessage-length=0)

# uncomment to mitigate c++17 absolute addresses warnings
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-register")

# Enable assembler files preprocessing
add_compile_options($<$<COMPILE_LANGUAGE:ASM>:-x$<SEMICOLON>assembler-with-cpp>)

if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    message(STATUS "Maximum optimization for speed")
    add_compile_options(-Ofast)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "RelWithDebInfo")
    message(STATUS "Maximum optimization for speed, debug info included")
    add_compile_options(-Ofast -g)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "MinSizeRel")
    message(STATUS "Maximum optimization for size")
    add_compile_options(-Os)
else ()
    message(STATUS "Minimal optimization, debug info included")
    add_compile_options(-Og -g)
endif ()

include_directories(Core/Inc Drivers/STM32F1xx_HAL_Driver/Inc/Legacy Drivers/STM32F1xx_HAL_Driver/Inc Middlewares/Third_Party/FreeRTOS/Source/include
        Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2
        Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3
        Drivers/CMSIS/Device/ST/STM32F1xx/Include
        Drivers/CMSIS/Include
        Hardware/
        GUI/
        GUI/examples/
        GUI/src/
        )

add_definitions(-DDEBUG -DUSE_HAL_DRIVER -DSTM32F103xE)

file(GLOB_RECURSE SOURCES
        "Core/*.*"
        "Middlewares/*.*"
        "Drivers/*.*"
        "Hardware/*.*"
        "GUI/examples/lv_port_disp.c"
        "GUI/*.*"
        "GUI/src/*.*"
        "GUI/src/core/*.*"
        "GUI/src/draw/nxp_pxp/*.*"
        "GUI/src/draw/nxp_vglite/*.*"
        "GUI/src/draw/sdl/*.*"
        "GUI/src/draw/stm32_dma2d/*.*"
        "GUI/src/draw/sw/*.*"
        "GUI/src/draw/*.*"
        "GUI/src/extra/layouts/flex/*.*"
        "GUI/src/extra/layouts/grid/*.*"
        "GUI/src/extra/layouts/*.*"
        "GUI/src/extra/libs/*.*"
        "GUI/src/extra/libs/bmp/*.*"
        "GUI/src/extra/libs/ffmpeg/*.*"
        "GUI/src/extra/libs/freetype/*.*"
        "GUI/src/extra/libs/fsdrv/*.*"
        "GUI/src/extra/libs/gif/*.*"
        "GUI/src/extra/libs/png/*.*"
        "GUI/src/extra/libs/qrcode/*.*"
        "GUI/src/extra/libs/rlottie/*.*"
        "GUI/src/extra/libs/sjpg/*.*"
        "GUI/src/extra/others/*.*"
        "GUI/src/extra/others/gridnav/*.*"
        "GUI/src/extra/others/monkey/*.*"
        "GUI/src/extra/others/snapshot/*.*"
        "GUI/src/extra/themes/*.*"
        "GUI/src/extra/themes/basic/*.*"
        "GUI/src/extra/themes/default/*.*"
        "GUI/src/extra/themes/mono/*.*"
        "GUI/src/extra/widgets/*.*"
        "GUI/src/extra/widgets/animimg/*.*"
        "GUI/src/extra/widgets/calendar/*.*"
        "GUI/src/extra/widgets/chart/*.*"
        "GUI/src/extra/widgets/colorwheel/*.*"
        "GUI/src/extra/widgets/imgbtn/*.*"
        "GUI/src/extra/widgets/keyboard/*.*"
        "GUI/src/extra/widgets/led/*.*"
        "GUI/src/extra/widgets/list/*.*"
        "GUI/src/extra/widgets/menu/*.*"
        "GUI/src/extra/widgets/meter/*.*"
        "GUI/src/extra/widgets/msgbox/*.*"
        "GUI/src/extra/widgets/span/*.*"
        "GUI/src/extra/widgets/spinbox/*.*"
        "GUI/src/extra/widgets/spinner/*.*"
        "GUI/src/extra/widgets/tabview/*.*"
        "GUI/src/extra/widgets/tileview/*.*"
        "GUI/src/extra/widgets/win/*.*"
        "GUI/src/font/*.*"
        "GUI/src/gpu/*.*"
        "GUI/src/hal/*.*"
        "GUI/src/misc/*.*"
        "GUI/src/widgets/*.*"
        )
set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/STM32F103RCTX_FLASH.ld)

add_link_options(-Wl,-gc-sections,--print-memory-usage,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map)
add_link_options(-mcpu=cortex-m3 -mthumb -mthumb-interwork)
add_link_options(-T ${LINKER_SCRIPT})

add_executable(${PROJECT_NAME}.elf ${SOURCES} ${LINKER_SCRIPT})

set(HEX_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.bin)

add_custom_command(TARGET ${PROJECT_NAME}.elf POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${HEX_FILE}
        COMMAND ${CMAKE_OBJCOPY} -Obinary $<TARGET_FILE:${PROJECT_NAME}.elf> ${BIN_FILE}
        COMMENT "Building ${HEX_FILE}
Building ${BIN_FILE}")
